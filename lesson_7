# Tubsonlarni , Ham iterator ham generator orqali yozib kelinglar
from math import sqrt

## --------------------------------------variant 1
# --------------------------------------------- n gacha barcha tub sonlar

# class TubSon:
#     def __init__(self, number):
#         self.number = number
#         self.current = 1

#     def __iter__(self):
#         return self
    
#     def __next__(self):
#         self.current += 1
#         while self.current <= self.number:
#             if self.is_prime(self.current):
#                 return self.current
#             self.current += 1
#         raise StopIteration

#     def is_prime(self, num):
#         if num <= 1:
#             return False
#         if num <= 3:
#             return True
#         if num % 2 == 0 or num % 3 == 0:
#             return False
#         for i in range(5, int(sqrt(num)) + 1, 6):
#             if num % i == 0 or num % (i + 2) == 0:
#                 return False
#         return True
# number = int(input('enter number: '))
# tub_son = TubSon(number)
# for i in tub_son:
#     print(i)


# # ===============> in generator

# def tub_son(number):
#     if number <= 1:
#         yield f'{number} tub son emas'
#         return

#     count = 0
#     for i in range(2, int(sqrt(number)) + 1):
#         if number % i == 0:
#             count += 1
#             break
    
#     if count == 0:
#         yield f'{number} tub son'
#     else:
#         yield f'{number} tub son emas'

# number = int(input('enter number: '))
# result = list(tub_son(number))
# print(result)


## ==========================> in iterator version 2

# class TubSon:
#     def __init__(self, number):
#         self.number = number

#     def __iter__(self):
#         return self

#     def __next__(self):
#         num = int(sqrt(self.number))
#         count = 0
#         for i in range(1, num + 1):
#             if self.number % i == 0:
#                 count += 1
#             else:
#                 continue
#         if count > 1:
#             print(f"{self.number} tub son emas")
#         elif count == 1 or self.number == 1:
#             print(f'{self.number} tub son')
           
    
# son = int(input('enter number: '))
# my_num = TubSon(son)
# my_num.__next__()













